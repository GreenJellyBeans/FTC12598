package gjb.interfaces;

/**
 * Created by josephj on 9/24/2017.
 */

public interface LoggingInterface {
    // These are reserved key names - don't use them for generating key-value
    // pairs:
    final String SESSION_ID = "_sid";
    final String SEQ_NO = "_sn";
    final String TIMESTAMP = "_ts";
    final String COMPONENT = "_co";
    final String PRI = "_pri"; // Priority: 0/1/2
    final String SEV = "_sev"; // Severity: ERR/WARN/CRIT/INFO/VERB
    final String TYPE = "_ty"; // Message type

    // Reserved message types
    final String LOGGER = "LOGGER"; // Messages generated by logging system itself
    final String ASSERTFAIL = "ASSERTFAIL";
    final String OTHER = "OTHER"; // Unspecified message type

    // Creates a child logger with the specified component name.
    LoggingInterface newLogger(String component);

    void err(String msgType, String s);
    void warn(String msgType, String s);
    void crit(String msgType, String s);
    void info(String msgType, String s);
    void verb(String msgType, String s);

    // Simpler versions logged as category OTHER
    void err(String s); //  Pri 0
    void warn(String s); // Pri 0
    void crit(String s); // Pri 0
    void info(String s); // Pri 1
    void verb(String s); // Pri 2

    // Logging is started by default, but may be stopped/restarted
    // dynamically - useful for selectively logging extremely verbose
    // data. The start/stop applies only to this log instance, NOT
    // to any children.
    void pause(); // stop logging
    void resume();// (re)start logging

    // If {cond} is false log an error, flush and call the assertion
    // failure handler. Nothing is logged if {cond} is true.
    void loggedAssert(boolean cond, String s);
    void flush();
}
